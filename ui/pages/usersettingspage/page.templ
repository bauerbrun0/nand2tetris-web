package usersettingspage

import (
	"github.com/bauerbrun0/nand2tetris-web/internal/ctxi18n"
	"github.com/bauerbrun0/nand2tetris-web/internal/validator"
	"github.com/bauerbrun0/nand2tetris-web/ui/components"
	"github.com/bauerbrun0/nand2tetris-web/ui/layouts"
	"github.com/bauerbrun0/nand2tetris-web/ui/pages"
	"slices"
)

type UserSettingsPageData struct {
	Form                       string `form:"form"`
	ChpCurrentPassword         string `form:"chp-current-password"`
	ChpNewPassword             string `form:"chp-new-password"`
	ChpNewPasswordConfirmation string `form:"chp-new-password-confirmation"`
	ChePassword                string `form:"che-password"`
	CheNewEmail                string `form:"che-new-email"`
	ChescCode                  string `form:"chesc-code"`
	DaEmail                    string `form:"da-email"`
	CpaPassword                string `form:"cpa-password"`
	CpaPasswordConfirmation    string `form:"cpa-password-confirmation"`
	LinkGooglePassword         string `form:"link-google/password"`
	LinkGithubPassword         string `form:"link-github/password"`
	UnlinkGooglePassword       string `form:"unlink-google/password"`
	UnlinkGithubPassword       string `form:"unlink-github/password"`
	Verification               string `form:"verification"`
	validator.Validator        `form:-`
	pages.PageData             `form:-`
}

templ Page(data UserSettingsPageData) {
	@layouts.BaseLayout(data.PageData) {
		<div class="min-h-full inner-container-small py-6">
			<h1 class="text-xl md:text-2xl font-bold">
				{ ctxi18n.T(ctx, "text.settings") }
			</h1>
			<h2 class="text-lg md:text-xl my-6">
				{ ctxi18n.T(ctx, "user_settings_page.account") }
			</h2>
			<hr class="h-px border-0 bg-divider dark:bg-divider-dark"/>
			@accountSection(data)
			<h2 class="md:text-lg mt-12 mb-6">
				{ ctxi18n.T(ctx, "user_settings_page.account_security") }
			</h2>
			<hr class="h-px border-0 bg-divider dark:bg-divider-dark"/>
			if data.UserInfo.IsPasswordSet {
				@emailSection(data)
				@passwordSection(data)
			} else {
				@createPasswordSection(data)
			}
			<h2 class="md:text-lg mt-12 mb-6">
				{ ctxi18n.T(ctx, "user_settings_page.linked_accounts") }
			</h2>
			<hr class="h-px border-0 bg-divider dark:bg-divider-dark"/>
			if !slices.Contains(data.UserInfo.LinkedAccounts, "Google") {
				@linkGoogleAccountSection(data)
			} else if data.UserInfo.IsPasswordSet || len(data.UserInfo.LinkedAccounts) >= 2 {
				@unlinkGoogleAccountSection(data)
			}
			if !slices.Contains(data.UserInfo.LinkedAccounts, "GitHub") {
				@linkGithubAccountSection(data)
			} else if data.UserInfo.IsPasswordSet || len(data.UserInfo.LinkedAccounts) >= 2 {
				@unlinkGithubAccountSection(data)
			}
			<h2 class="md:text-lg mt-12 mb-6">
				{ ctxi18n.T(ctx, "user_settings_page.danger_zone") }
			</h2>
			<hr class="h-px border-0 bg-divider dark:bg-divider-dark"/>
			@deleteAccountSection(data)
		</div>
	}
}

templ accountSection(data UserSettingsPageData) {
	<div class="flex space-x-3 md:space-x-6 items-center md:pr-6 my-6">
		<div class="w-10 h-10 md:w-14 md:h-14 bg-silver-50 rounded-full dark:bg-white flex items-center">
			@components.UserIcon("text-silver-900 w-4 h-4 md:w-8 md:h-8 mx-auto")
		</div>
		<div class="flex-col space-y-2 flex">
			<span class="font-medium text-left">{ data.UserInfo.Username }</span>
			<span class="text-left">{ data.UserInfo.Email }</span>
		</div>
	</div>
}

templ linkGoogleAccountSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span>{ ctxi18n.T(ctx, "user_settings_page.link_google_account") }</span>
			<span class="font-light text-sm">{ ctxi18n.T(ctx, "user_settings_page.link_google_account_note") }</span>
		</div>
		<div class="flex items-center ml-5">
			@components.ToggleModalButton(components.ToggleModalButtonOptions{
				ModalId:        "link-google-account-modal",
				Text:           ctxi18n.T(ctx, "user_settings_page.link_google_account"),
				InitialTrigger: data.Form == "link-google-account",
			})
			@authenticatedActionModal(AuthenticatedActionModalOptions{
				ModalId:            "link-google-account-modal",
				Data:               data,
				Title:              ctxi18n.T(ctx, "user_settings_page.link_google_account"),
				Note:               ctxi18n.T(ctx, "user_settings_page.authenticated_modal_verify"),
				PasswordButtonText: ctxi18n.T(ctx, "user_settings_page.link_google_account"),
				PasswordFieldName:  "link-google/password",
				FormValue:          "link-google-account",
			})
		</div>
	</div>
}

templ unlinkGoogleAccountSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span>{ ctxi18n.T(ctx, "user_settings_page.unlink_google_account") }</span>
			<span class="font-light text-sm">{ ctxi18n.T(ctx, "user_settings_page.unlink_google_account_note") }</span>
		</div>
		<div class="flex items-center ml-5">
			@components.ToggleModalButton(components.ToggleModalButtonOptions{
				ModalId:        "unlink-google-account-modal",
				Text:           ctxi18n.T(ctx, "user_settings_page.unlink_google_account"),
				InitialTrigger: data.Form == "unlink-google-account",
			})
			@authenticatedActionModal(AuthenticatedActionModalOptions{
				ModalId:            "unlink-google-account-modal",
				Data:               data,
				Title:              ctxi18n.T(ctx, "user_settings_page.unlink_google_account"),
				Note:               ctxi18n.T(ctx, "user_settings_page.authenticated_modal_verify"),
				PasswordButtonText: ctxi18n.T(ctx, "user_settings_page.unlink_google_account"),
				PasswordFieldName:  "unlink-google/password",
				FormValue:          "unlink-google-account",
			})
		</div>
	</div>
}

templ linkGithubAccountSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span>{ ctxi18n.T(ctx, "user_settings_page.link_github_account") }</span>
			<span class="font-light text-sm">{ ctxi18n.T(ctx, "user_settings_page.link_github_account_note") }</span>
		</div>
		<div class="flex items-center ml-5">
			@components.ToggleModalButton(components.ToggleModalButtonOptions{
				ModalId:        "link-github-account-modal",
				Text:           ctxi18n.T(ctx, "user_settings_page.link_github_account"),
				InitialTrigger: data.Form == "link-github-account",
			})
			@authenticatedActionModal(AuthenticatedActionModalOptions{
				ModalId:            "link-github-account-modal",
				Data:               data,
				Title:              ctxi18n.T(ctx, "user_settings_page.link_github_account"),
				Note:               ctxi18n.T(ctx, "user_settings_page.authenticated_modal_verify"),
				PasswordButtonText: ctxi18n.T(ctx, "user_settings_page.link_github_account"),
				PasswordFieldName:  "link-github/password",
				FormValue:          "link-github-account",
			})
		</div>
	</div>
}

templ unlinkGithubAccountSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span>{ ctxi18n.T(ctx, "user_settings_page.unlink_github_account") }</span>
			<span class="font-light text-sm">{ ctxi18n.T(ctx, "user_settings_page.unlink_github_account_note") }</span>
		</div>
		<div class="flex items-center ml-5">
			@components.ToggleModalButton(components.ToggleModalButtonOptions{
				ModalId:        "unlink-github-account-modal",
				Text:           ctxi18n.T(ctx, "user_settings_page.unlink_github_account"),
				InitialTrigger: data.Form == "unlink-github-account",
			})
			@authenticatedActionModal(AuthenticatedActionModalOptions{
				ModalId:            "unlink-github-account-modal",
				Data:               data,
				Title:              ctxi18n.T(ctx, "user_settings_page.unlink_github_account"),
				Note:               ctxi18n.T(ctx, "user_settings_page.authenticated_modal_verify"),
				PasswordButtonText: ctxi18n.T(ctx, "user_settings_page.unlink_github_account"),
				PasswordFieldName:  "unlink-github/password",
				FormValue:          "unlink-github-account",
			})
		</div>
	</div>
}

templ createPasswordSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span>{ ctxi18n.T(ctx, "user_settings_page.create_password") }</span>
			<span class="font-light text-sm">{ ctxi18n.T(ctx, "user_settings_page.create_password_note") }</span>
		</div>
		<div class="flex items-center ml-5">
			@components.ToggleModalButton(components.ToggleModalButtonOptions{
				ModalId:        "create-password-modal",
				Text:           ctxi18n.T(ctx, "user_settings_page.create_password"),
				InitialTrigger: data.Form == "create-password",
			})
			@createPasswordModal(data)
		</div>
	</div>
}

templ emailSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span>{ ctxi18n.T(ctx, "text.email") }</span>
			<span class="font-light text-sm">{ data.UserInfo.Email }</span>
		</div>
		<div class="flex items-center ml-5">
			@components.ToggleModalButton(components.ToggleModalButtonOptions{
				ModalId:        "email-change-modal",
				Text:           ctxi18n.T(ctx, "user_settings_page.change_email"),
				InitialTrigger: data.Form == "change-email",
			})
			@emailChangeModal(data)
			@components.ToggleModalButton(components.ToggleModalButtonOptions{
				ModalId:        "email-change-send-code-modal",
				InitialTrigger: data.Form == "change-email-send-code",
			})
			@emailChangeSendCodeModal(data)
		</div>
	</div>
}

templ passwordSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span>{ ctxi18n.T(ctx, "text.password") }</span>
			<span class="font-light text-sm">{ ctxi18n.T(ctx, "user_settings_page.want_to_change_password") }</span>
		</div>
		<div class="flex items-center ml-5">
			@components.ToggleModalButton(components.ToggleModalButtonOptions{
				ModalId:        "password-change-modal",
				Text:           ctxi18n.T(ctx, "user_settings_page.change_password"),
				InitialTrigger: data.Form == "change-password",
			})
			@passwordChangeModal(data)
		</div>
	</div>
}

templ deleteAccountSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span class="text-red-500">{ ctxi18n.T(ctx, "user_settings_page.delete_my_account") }</span>
			<span class="font-light text-sm">{ ctxi18n.T(ctx, "user_settings_page.delete_account_permanently") }</span>
		</div>
		<div class="flex items-center ml-5">
			@components.ToggleModalButton(components.ToggleModalButtonOptions{
				ModalId:           "delete-account-modal",
				Text:              ctxi18n.T(ctx, "user_settings_page.delete_account"),
				InitialTrigger:    data.Form == "delete-account",
				AdditionalClasses: "hover:text-red-500 dark:hover:text-red-500 hover:border-red-500",
			})
			@deleteAccountModal(data)
		</div>
	</div>
}
