package usersettingspage

import (
	"github.com/bauerbrun0/nand2tetris-web/internal/validator"
	"github.com/bauerbrun0/nand2tetris-web/ui/components"
	"github.com/bauerbrun0/nand2tetris-web/ui/layouts"
	"github.com/bauerbrun0/nand2tetris-web/ui/pages"
)

type UserSettingsPageData struct {
	Form                       string `form:"form"` // change-password || change-email || change-email-send-code
	ChpCurrentPassword         string `form:"chp-current-password"`
	ChpNewPassword             string `form:"chp-new-password"`
	ChpNewPasswordConfirmation string `form:"chp-new-password-confirmation"`
	ChePassword                string `form:"che-password"`
	CheNewEmail                string `form:"che-new-email"`
	ChescCode                  string `form:"chesc-code"`
	validator.Validator        `form:-`
	pages.PageData             `form:-`
}

templ Page(data UserSettingsPageData) {
	@layouts.BaseLayout(data.PageData) {
		<div class="min-h-full inner-container-small py-6">
			<h1 class="text-xl md:text-2xl font-bold">Settings</h1>
			<h2 class="text-lg md:text-xl my-6">Account</h2>
			<hr class="h-px border-0 bg-divider dark:bg-divider-dark"/>
			@accountDisplay(data)
			<h2 class="md:text-lg mt-12 mb-6">Account security</h2>
			<hr class="h-px border-0 bg-divider dark:bg-divider-dark"/>
			@emailSection(data)
			@emailChangeModal(data)
			<button
				class="hidden"
				data-modal-target="email-change-send-code-modal"
				data-modal-toggle="email-change-send-code-modal"
				if data.Form == "change-email-send-code" {
					x-init="$nextTick(() => $el.click())"
				}
			></button>
			@emailChangeSendCodeModal(data)
			@passwordSection(data)
			@passwordChangeModal(data)
		</div>
	}
}

templ accountDisplay(data UserSettingsPageData) {
	<div
		class="flex space-x-3 md:space-x-6 items-center md:pr-6 my-6"
	>
		<div class="w-10 h-10 md:w-14 md:h-14 bg-silver-50 rounded-full dark:bg-white flex items-center">
			@components.UserIcon("text-silver-900 w-4 h-4 md:w-8 md:h-8 mx-auto")
		</div>
		<div class="flex-col space-y-2 flex">
			<span class="font-medium text-left">{ data.UserInfo.Username }</span>
			<span class="text-left">{ data.UserInfo.Email }</span>
		</div>
	</div>
}

templ emailSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span>Email</span>
			<span class="font-light text-sm">{ data.UserInfo.Email }</span>
		</div>
		<div class="flex items-center ml-5">
			<button
				data-modal-target="email-change-modal"
				data-modal-toggle="email-change-modal"
				if data.Form == "change-email" {
					x-init="$nextTick(() => $el.click())"
				}
				class={ `
					hover:cursor-pointer text-text hover:text-primary-700 border border-black hover:border-primary-700
					focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg
					text-sm px-5 py-2.5 text-center dark:border-white dark:text-white dark:hover:text-primary-700
				 	dark:focus:ring-primary-800 whitespace-nowrap
				` }
			>
				Change email
			</button>
		</div>
	</div>
}

templ passwordSection(data UserSettingsPageData) {
	<div class="flex justify-between my-6">
		<div class="flex flex-col space-y-4">
			<span>Password</span>
			<span class="font-light text-sm">Want to change your password? Click the button to get a code by email.</span>
		</div>
		<div class="flex items-center ml-5">
			<button
				data-modal-target="password-change-modal"
				data-modal-toggle="password-change-modal"
				if data.Form == "change-password" {
					x-init="$nextTick(() => $el.click())"
				}
				class={ `
					hover:cursor-pointer text-text hover:text-primary-700 border border-black hover:border-primary-700
					focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg
					text-sm px-5 py-2.5 text-center dark:border-white dark:text-white dark:hover:text-primary-700
				 	dark:focus:ring-primary-800 whitespace-nowrap
				` }
			>
				Change password
			</button>
		</div>
	</div>
}

templ passwordChangeModal(data UserSettingsPageData) {
	<div id="password-change-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%)] max-h-full">
		<div
			x-data
			@click.outside="history.replaceState(null, '', window.location.pathname)"
			class="relative mx-2 w-full max-w-md p-4 bg-white-500 rounded-lg sm:p-6 md:p-8 dark:bg-silver-900"
		>
			<form class="space-y-6" action="/user/settings" method="POST" novalidate>
				<div class="flex items-center justify-between">
					<h5 class="text-xl font-medium text-text dark:text-text-dark w-full">Change password</h5>
					<button
						type="button"
						x-data
						@click="history.replaceState(null, '', window.location.pathname)"
						class="end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
						data-modal-hide="password-change-modal"
					>
						@components.XIcon("w-5 h-5")
						<span class="sr-only">Close modal</span>
					</button>
				</div>
				<input type="hidden" name="form" value="change-password"/>
				@components.Input(components.InputOptions{
					Label:       "Current Password",
					Name:        "chp-current-password",
					Value:       "",
					Placeholder: "••••••••",
					FieldType:   "password",
					Icon:        components.KeyIcon("w-4 h-4"),
					Err:         data.FieldErrors["chp-current-password"],
				})
				@components.Input(components.InputOptions{
					Label:       "New Password",
					Name:        "chp-new-password",
					Value:       "",
					Placeholder: "••••••••",
					FieldType:   "password",
					Icon:        components.KeyIcon("w-4 h-4"),
					Err:         data.FieldErrors["chp-new-password"],
				})
				@components.Input(components.InputOptions{
					Label:       "Confirm New Password",
					Name:        "chp-new-password-confirmation",
					Value:       "",
					Placeholder: "••••••••",
					FieldType:   "password",
					Icon:        components.KeyIcon("w-4 h-4"),
					Err:         data.FieldErrors["chp-new-password-confirmation"],
				})
				<button
					type="submit"
					class={ `
							w-full
							hover:cursor-pointer text-white bg-primary-700 hover:bg-primary-600
							focus:ring-4 focus:ring-primary-300 font-medium rounded-lg
							px-5 py-2.5 dark:hover:bg-primary-800 focus:outline-none
							dark:focus:ring-primary-800
						` }
				>
					Change Password
				</button>
			</form>
		</div>
	</div>
}

templ emailChangeModal(data UserSettingsPageData) {
	<div id="email-change-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%)] max-h-full">
		<div
			x-data
			@click.outside="history.replaceState(null, '', window.location.pathname)"
			class="relative mx-2 w-full max-w-md p-4 bg-white-500 rounded-lg sm:p-6 md:p-8 dark:bg-silver-900"
		>
			<form class="space-y-6" action="/user/settings" method="POST" novalidate>
				<div class="flex items-center justify-between">
					<h5 class="text-xl font-medium text-text dark:text-text-dark w-full">Change email</h5>
					<button
						type="button"
						x-data
						@click="history.replaceState(null, '', window.location.pathname)"
						class="end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
						data-modal-hide="email-change-modal"
					>
						@components.XIcon("w-5 h-5")
						<span class="sr-only">Close modal</span>
					</button>
				</div>
				<input type="hidden" name="form" value="change-email"/>
				@components.Input(components.InputOptions{
					Label:       "Password",
					Name:        "che-password",
					Value:       "",
					Placeholder: "••••••••",
					FieldType:   "password",
					Icon:        components.KeyIcon("w-4 h-4"),
					Err:         data.FieldErrors["che-password"],
				})
				@components.Input(components.InputOptions{
					Label:       "New Email",
					Name:        "che-new-email",
					Value:       data.CheNewEmail,
					Placeholder: "user@example.com",
					FieldType:   "email",
					Icon:        components.EmailIcon("w-4 h-4"),
					Err:         data.FieldErrors["che-new-email"],
				})
				<button
					type="submit"
					class={ `
							w-full
							hover:cursor-pointer text-white bg-primary-700 hover:bg-primary-600
							focus:ring-4 focus:ring-primary-300 font-medium rounded-lg
							px-5 py-2.5 dark:hover:bg-primary-800 focus:outline-none
							dark:focus:ring-primary-800
						` }
				>
					Change Email
				</button>
			</form>
			<div class="text-sm font-medium text-silver-600 mt-6">
				Already received an email?
				<button
					class="text-link dark:text-link-dark cursor-pointer"
					data-modal-hide="email-change-modal"
					data-modal-show="email-change-send-code-modal"
				>
					Enter Code
				</button>
			</div>
		</div>
	</div>
}

templ emailChangeSendCodeModal(data UserSettingsPageData) {
	<div id="email-change-send-code-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%)] max-h-full">
		<div
			x-data
			@click.outside="history.replaceState(null, '', window.location.pathname)"
			class="relative mx-2 w-full max-w-md p-4 bg-white-500 rounded-lg sm:p-6 md:p-8 dark:bg-silver-900"
		>
			<form class="space-y-6" action="/user/settings" method="POST" novalidate>
				<div class="flex items-center justify-between">
					<h5 class="text-xl font-medium text-text dark:text-text-dark w-full">Change email</h5>
					<button
						type="button"
						x-data
						@click="history.replaceState(null, '', window.location.pathname)"
						class="end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
						data-modal-hide="email-change-send-code-modal"
					>
						@components.XIcon("w-5 h-5")
						<span class="sr-only">Close modal</span>
					</button>
				</div>
				<p class="text-center text-sm">
					We’ve sent a verification code to your new email. Enter the code below to continue changing your email.
				</p>
				<input type="hidden" name="form" value="change-email-send-code"/>
				@components.Input(components.InputOptions{
					Label:       "Code",
					Name:        "chesc-code",
					Value:       "",
					Placeholder: "Verification Code",
					FieldType:   "text",
					Icon:        components.KeyIcon("w-4 h-4"),
					Err:         data.FieldErrors["chesc-code"],
				})
				<button
					type="submit"
					class={ `
							w-full
							hover:cursor-pointer text-white bg-primary-700 hover:bg-primary-600
							focus:ring-4 focus:ring-primary-300 font-medium rounded-lg
							px-5 py-2.5 dark:hover:bg-primary-800 focus:outline-none
							dark:focus:ring-primary-800
						` }
				>
					Change Email
				</button>
			</form>
			<div class="text-sm font-medium text-silver-600 mt-6">
				To change the email or resend the code
				<button
					data-modal-hide="email-change-send-code-modal"
					data-modal-show="email-change-modal"
					class="text-link dark:text-link-dark cursor-pointer"
				>
					click here
				</button>
			</div>
		</div>
	</div>
}
